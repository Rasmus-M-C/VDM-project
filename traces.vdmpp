class Traces
types

values

    system : controller = new controller();  -- Reference to the parking controller
    system1 : controller = new controller();  -- Reference to the parking controller

traces

T1:
(
    system.initGarage();
    let car1 = new car("1E1", mk_(-1, -1, -1), 0, <electric>),
        car2 = new car("1G1", mk_(-1, -1, -1), 0, <gas>) in
    (
        (system.enterGarage(car1); system.enterGarage(car2)) |  -- Test car1 first, then car2
        (system.enterGarage(car2); system.enterGarage(car1));  -- Test car2 first, then car1
        
        (system.leaveGarage("1E1"); system.leaveGarage("1G1")) |  -- Test leave car1 first
        (system.leaveGarage("1G1"); system.leaveGarage("1E1"))   -- Test leave car2 first
    )
);

T2:
(
    system1.initGarage();
    let car1 = new car("2E1", mk_(-1, -1, -1), 0, <electric>),
        car2 = new car("2G1", mk_(-1, -1, -1), 0, <gas>) in
    (
        (system1.enterGarage(car1) | system1.enterGarage(car2));  -- Test all entry orders
        (system1.leaveGarage("2E1") | system1.leaveGarage("2G1"));  -- Test all exit orders
    )
);

T3:
(
    
    let car1 = new car("3E1", mk_(-1, -1, -1), 0, <electric>),
        car2 = new car("3E2", mk_(-1, -1, -1), 0, <electric>),
        car3 = new car("3G1", mk_(-1, -1, -1), 0, <gas>) in
    (
        (system.enterGarage(car1); system.enterGarage(car2); system.enterGarage(car3)) |  -- Electric cars first
        (system.enterGarage(car3); system.enterGarage(car1); system.enterGarage(car2));  -- Gas car first

        (system.leaveGarage("3E1"); system.leaveGarage("3E2"); system.leaveGarage("3G1")) |  -- Electric cars leave first
        (system.leaveGarage("3G1"); system.leaveGarage("3E1"); system.leaveGarage("3E2"))   -- Gas car leaves first
    )
);

T4:
(
    let car1 = new car("A1", mk_(-1, -1, -1), 0, <electric>) in
    let car2 = new car("A2", mk_(-1, -1, -1), 0, <electric>) in
    (
        system.enterGarage(car1) | system.enterGarage(car2);
        system.leaveGarage("A1");
        system.leaveGarage("A2");
    )
);

T6:
(
    let car1 = new car("B1", mk_(-1, -1, -1), 0, <gas>) in
    let car2 = new car("B2", mk_(-1, -1, -1), 0, <gas>) in
    (
        system.enterGarage(car1) | system.enterGarage(car2);
        system.leaveGarage("B1");
        system.leaveGarage("B2");
    )
);




DimensionsValid:
(
   
    Assert`assertTrue(system.getMaxCapacity() > 0);  -- Verify dimensions are positive
);

PaymentTest:
(
    let car1 = new car("1E1", mk_(-1, -1, -1), 0, <electric>) in
        
    (
        system.initGarage();
        system.enterGarage(car1);
        world`timerRef.Step();
        system.leaveGarage("1E1");
        Assert`assertTrue( system.getBankBalance() = 1);  -- Verify fee is 0
    )
);





end Traces
